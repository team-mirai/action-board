steps:
  - name: 'node:22'
    entrypoint: "bash"
    args:
      - '-c'
      - |
        npx supabase link --project-ref ${_SUPABASE_PROJECT_ID} -p $$SUPABASE_DB_PASSWORD

        npx supabase db push
        npx supabase config push
    env:
      - 'CI=true'
      - 'SMTP_ENABLED=true'
      - 'SMTP_HOST=${_SUPABASE_SMTP_HOST}'
      - 'SMTP_USER=${_SUPABASE_SMTP_USER}'
      - 'SMTP_ADMIN_EMAIL=${_SUPABASE_SMTP_ADMIN_EMAIL}'
      - 'SMTP_SENDER_NAME=${_SUPABASE_SMTP_SENDER_NAME}'
      - 'SITE_URL=${_SUPABASE_SITE_URL}'
      - 'ADDITIONAL_REDIRECT_URLS=${_SUPABASE_ADDITIONAL_REDIRECT_URLS}'
      - 'ENABLE_CONFIRMATIONS=true'
    secretEnv:
      - SUPABASE_ACCESS_TOKEN
      - SUPABASE_DB_PASSWORD
      - SMTP_PASS

  # Dockerイメージのビルド
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker build \
          -t ${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_NAME}/${_SERVICE_NAME}:${COMMIT_SHA} \
          -t ${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_NAME}/${_SERVICE_NAME}:latest \
          --build-arg NEXT_PUBLIC_SUPABASE_URL=${_NEXT_PUBLIC_SUPABASE_URL} \
          --build-arg NEXT_PUBLIC_SUPABASE_ANON_KEY=${_NEXT_PUBLIC_SUPABASE_ANON_KEY} \
          --build-arg NEXT_PUBLIC_GA_ID=${_NEXT_PUBLIC_GA_ID} \
          --build-arg NEXT_PUBLIC_SENTRY_DSN=${_NEXT_PUBLIC_SENTRY_DSN} \
          --build-arg NEXT_PUBLIC_SENTRY_ENVIRONMENT=${_NEXT_PUBLIC_SENTRY_ENVIRONMENT} \
          --build-arg NEXT_PUBLIC_APP_ORIGIN="${_NEXT_PUBLIC_APP_ORIGIN}" \
          --build-arg SENTRY_RELEASE=${COMMIT_SHA} \
          --build-arg SENTRY_AUTH_TOKEN="$$SENTRY_AUTH_TOKEN" \
          .
    secretEnv:
      - SENTRY_AUTH_TOKEN

  # Artifact Registryへのプッシュ
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_NAME}/${_SERVICE_NAME}:latest'

  # Cloud Runへのデプロイ
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run',
      'deploy',
      '${_SERVICE_NAME}',
      '--image', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated'
    ]

# オプション設定
options:
  # ビルドマシンのスペック
  machineType: 'E2_HIGHCPU_8'
  # ディスクサイズ
  diskSizeGb: 100
  # ログ設定
  logging: CLOUD_LOGGING_ONLY

# タイムアウト設定（30分）
timeout: 1800s

# 成果物として保存するイメージ
images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_NAME}/${_SERVICE_NAME}:latest'


availableSecrets:
  secretManager:
    - versionName: 'projects/${PROJECT_ID}/secrets/${_SERVICE_NAME}-supabase-access-token/versions/latest'
      env: SUPABASE_ACCESS_TOKEN
    - versionName: 'projects/${PROJECT_ID}/secrets/${_SERVICE_NAME}-supabase-db-password/versions/latest'
      env: SUPABASE_DB_PASSWORD
    - versionName: 'projects/${PROJECT_ID}/secrets/${_SERVICE_NAME}-supabase-smtp-password/versions/latest'
      env: SMTP_PASS
    - versionName: 'projects/${PROJECT_ID}/secrets/${_SERVICE_NAME}-sentry-auth-token/versions/latest'
      env: SENTRY_AUTH_TOKEN
